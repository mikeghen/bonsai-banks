{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "15": "contracts/mock/SafeMath.sol",
    "16": "contracts/mock/Token.sol"
  },
  "ast": {
    "absolutePath": "contracts/mock/Token.sol",
    "exportedSymbols": {
      "SafeMath": [
        980
      ],
      "Token": [
        1244
      ]
    },
    "id": 1245,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 982,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "absolutePath": "contracts/mock/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 983,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1245,
        "sourceUnit": 981,
        "src": "58:24:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 984,
          "nodeType": "StructuredDocumentation",
          "src": "84:161:16",
          "text": "@title Bare-bones Token implementation\n@notice Based on the ERC-20 token standard as defined at\nhttps://eips.ethereum.org/EIPS/eip-20"
        },
        "fullyImplemented": true,
        "id": 1244,
        "linearizedBaseContracts": [
          1244
        ],
        "name": "Token",
        "nameLocation": "255:5:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 987,
            "libraryName": {
              "id": 985,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 980,
              "src": "274:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "268:27:16",
            "typeName": {
              "id": 986,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "287:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 989,
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "315:6:16",
            "nodeType": "VariableDeclaration",
            "scope": 1244,
            "src": "301:20:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 988,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "301:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 991,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "341:4:16",
            "nodeType": "VariableDeclaration",
            "scope": 1244,
            "src": "327:18:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 990,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "327:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 993,
            "mutability": "mutable",
            "name": "decimals",
            "nameLocation": "366:8:16",
            "nodeType": "VariableDeclaration",
            "scope": 1244,
            "src": "351:23:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 992,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "351:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 995,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "395:11:16",
            "nodeType": "VariableDeclaration",
            "scope": 1244,
            "src": "380:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 994,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 999,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "441:8:16",
            "nodeType": "VariableDeclaration",
            "scope": 1244,
            "src": "413:36:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 998,
              "keyType": {
                "id": 996,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "421:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "413:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 997,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "432:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1005,
            "mutability": "mutable",
            "name": "allowed",
            "nameLocation": "503:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 1244,
            "src": "455:55:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 1004,
              "keyType": {
                "id": 1000,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "463:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "455:47:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 1003,
                "keyType": {
                  "id": 1001,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "482:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "474:27:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 1002,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "493:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 1013,
            "name": "Transfer",
            "nameLocation": "523:8:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1007,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "540:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1013,
                  "src": "532:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "532:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1009,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "554:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1013,
                  "src": "546:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1011,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "566:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1013,
                  "src": "558:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "531:41:16"
            },
            "src": "517:56:16"
          },
          {
            "anonymous": false,
            "id": 1021,
            "name": "Approval",
            "nameLocation": "584:8:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1015,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "601:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1021,
                  "src": "593:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "593:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1017,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "616:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1021,
                  "src": "608:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1019,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "633:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1021,
                  "src": "625:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "592:47:16"
            },
            "src": "578:62:16"
          },
          {
            "body": {
              "id": 1065,
              "nodeType": "Block",
              "src": "800:227:16",
              "statements": [
                {
                  "expression": {
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1032,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 991,
                      "src": "810:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1033,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1023,
                      "src": "817:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "810:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "810:12:16"
                },
                {
                  "expression": {
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1036,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "832:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1037,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1025,
                      "src": "841:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "832:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "832:16:16"
                },
                {
                  "expression": {
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1040,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "858:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1041,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1027,
                      "src": "869:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "858:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "858:20:16"
                },
                {
                  "expression": {
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1044,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 995,
                      "src": "888:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1045,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1029,
                      "src": "902:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "888:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1047,
                  "nodeType": "ExpressionStatement",
                  "src": "888:26:16"
                },
                {
                  "expression": {
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1048,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "924:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1051,
                      "indexExpression": {
                        "expression": {
                          "id": 1049,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "933:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "933:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "924:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1052,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1029,
                      "src": "947:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "924:35:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1054,
                  "nodeType": "ExpressionStatement",
                  "src": "924:35:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "991:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "983:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1056,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "983:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "983:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1060,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "995:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "995:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1062,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1029,
                        "src": "1007:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1055,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "974:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1064,
                  "nodeType": "EmitStatement",
                  "src": "969:51:16"
                }
              ]
            },
            "id": 1066,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1023,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "681:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "667:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "710:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "696:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "696:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1027,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "735:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "727:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "762:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "754:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "657:123:16"
            },
            "returnParameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "800:0:16"
            },
            "scope": 1244,
            "src": "646:381:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1078,
              "nodeType": "Block",
              "src": "1264:40:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1074,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "1281:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1076,
                    "indexExpression": {
                      "id": 1075,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "1290:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1281:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1073,
                  "id": 1077,
                  "nodeType": "Return",
                  "src": "1274:23:16"
                }
              ]
            },
            "documentation": {
              "id": 1067,
              "nodeType": "StructuredDocumentation",
              "src": "1033:161:16",
              "text": "@notice Getter to check the current balance of an address\n@param _owner Address to query the balance of\n@return Token balance"
            },
            "functionSelector": "70a08231",
            "id": 1079,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1208:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1069,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1226:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1079,
                  "src": "1218:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1218:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1217:16:16"
            },
            "returnParameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1079,
                  "src": "1255:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1254:9:16"
            },
            "scope": 1244,
            "src": "1199:105:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1095,
              "nodeType": "Block",
              "src": "1734:49:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1089,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "1751:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 1091,
                      "indexExpression": {
                        "id": 1090,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1082,
                        "src": "1759:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1751:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1093,
                    "indexExpression": {
                      "id": 1092,
                      "name": "_spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1084,
                      "src": "1767:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1751:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1088,
                  "id": 1094,
                  "nodeType": "Return",
                  "src": "1744:32:16"
                }
              ]
            },
            "documentation": {
              "id": 1080,
              "nodeType": "StructuredDocumentation",
              "src": "1310:286:16",
              "text": "@notice Getter to check the amount of tokens that an owner allowed to a spender\n@param _owner The address which owns the funds\n@param _spender The address which will spend the funds\n@return The amount of tokens still available for the spender"
            },
            "functionSelector": "dd62ed3e",
            "id": 1096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "1610:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1082,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1637:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "1629:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "1661:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "1653:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1619:56:16"
            },
            "returnParameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "1721:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1721:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1720:9:16"
            },
            "scope": 1244,
            "src": "1601:182:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1124,
              "nodeType": "Block",
              "src": "2547:129:16",
              "statements": [
                {
                  "expression": {
                    "id": 1113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1106,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1005,
                          "src": "2557:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1110,
                        "indexExpression": {
                          "expression": {
                            "id": 1107,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2565:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2565:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2557:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1111,
                      "indexExpression": {
                        "id": 1109,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1099,
                        "src": "2577:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2557:29:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1112,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1101,
                      "src": "2589:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2557:38:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1114,
                  "nodeType": "ExpressionStatement",
                  "src": "2557:38:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2619:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2619:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1118,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1099,
                        "src": "2631:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1119,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "2641:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1115,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1021,
                      "src": "2610:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2610:38:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1121,
                  "nodeType": "EmitStatement",
                  "src": "2605:43:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2665:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1105,
                  "id": 1123,
                  "nodeType": "Return",
                  "src": "2658:11:16"
                }
              ]
            },
            "documentation": {
              "id": 1097,
              "nodeType": "StructuredDocumentation",
              "src": "1789:680:16",
              "text": "@notice Approve an address to spend the specified amount of tokens on behalf of msg.sender\n@dev Beware that changing an allowance with this method brings the risk that someone may use both the old\nand the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\nrace condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n@param _spender The address which will spend the funds.\n@param _value The amount of tokens to be spent.\n@return Success boolean"
            },
            "functionSelector": "095ea7b3",
            "id": 1125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "2483:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1099,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "2499:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "2491:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2491:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1101,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2517:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "2509:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2509:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2490:34:16"
            },
            "returnParameters": {
              "id": 1105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "2541:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2541:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2540:6:16"
            },
            "scope": 1244,
            "src": "2474:202:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1172,
              "nodeType": "Block",
              "src": "2808:224:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1136,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 999,
                            "src": "2826:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1138,
                          "indexExpression": {
                            "id": 1137,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "2835:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2826:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1139,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "2845:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2826:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2853:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 1135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2818:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2818:58:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "2818:58:16"
                },
                {
                  "expression": {
                    "id": 1153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1144,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "2886:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1146,
                      "indexExpression": {
                        "id": 1145,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "2895:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2886:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1151,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "2924:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1147,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 999,
                            "src": "2904:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1149,
                          "indexExpression": {
                            "id": 1148,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "2913:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2904:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 925,
                        "src": "2904:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2904:27:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2886:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1154,
                  "nodeType": "ExpressionStatement",
                  "src": "2886:45:16"
                },
                {
                  "expression": {
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1155,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "2941:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1157,
                      "indexExpression": {
                        "id": 1156,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "2950:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2941:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1162,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "2975:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1158,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 999,
                            "src": "2957:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1160,
                          "indexExpression": {
                            "id": 1159,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2966:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2957:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 901,
                        "src": "2957:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2957:25:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2941:41:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1165,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:41:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1167,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "3006:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1168,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "3013:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1169,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "3018:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1166,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "2997:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2997:28:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1171,
                  "nodeType": "EmitStatement",
                  "src": "2992:33:16"
                }
              ]
            },
            "documentation": {
              "id": 1126,
              "nodeType": "StructuredDocumentation",
              "src": "2682:49:16",
              "text": "shared logic for transfer and transferFrom "
            },
            "id": 1173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "2745:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2763:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1173,
                  "src": "2755:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2755:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2778:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1173,
                  "src": "2770:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2770:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2791:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1173,
                  "src": "2783:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2783:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2754:44:16"
            },
            "returnParameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2808:0:16"
            },
            "scope": 1244,
            "src": "2736:296:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1192,
              "nodeType": "Block",
              "src": "3307:72:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1184,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3327:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3327:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1186,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1176,
                        "src": "3339:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1187,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1178,
                        "src": "3344:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1183,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1173,
                      "src": "3317:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3317:34:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1189,
                  "nodeType": "ExpressionStatement",
                  "src": "3317:34:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3368:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1182,
                  "id": 1191,
                  "nodeType": "Return",
                  "src": "3361:11:16"
                }
              ]
            },
            "documentation": {
              "id": 1174,
              "nodeType": "StructuredDocumentation",
              "src": "3038:195:16",
              "text": "@notice Transfer tokens to a specified address\n@param _to The address to transfer to\n@param _value The amount to be transferred\n@return Success boolean"
            },
            "functionSelector": "a9059cbb",
            "id": 1193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3247:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1176,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3264:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "3256:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3256:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1178,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "3277:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "3269:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3269:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3255:29:16"
            },
            "returnParameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1181,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "3301:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3301:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3300:6:16"
            },
            "scope": 1244,
            "src": "3238:141:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1242,
              "nodeType": "Block",
              "src": "3821:225:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1206,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1005,
                              "src": "3839:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1208,
                            "indexExpression": {
                              "id": 1207,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1196,
                              "src": "3847:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3839:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1211,
                          "indexExpression": {
                            "expression": {
                              "id": 1209,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3854:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3854:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3839:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1212,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "3869:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3839:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
                        "id": 1214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3877:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        },
                        "value": "Insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        }
                      ],
                      "id": 1205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3831:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3831:71:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1216,
                  "nodeType": "ExpressionStatement",
                  "src": "3831:71:16"
                },
                {
                  "expression": {
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1217,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1005,
                          "src": "3912:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1221,
                        "indexExpression": {
                          "id": 1218,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "3920:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3912:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1222,
                      "indexExpression": {
                        "expression": {
                          "id": 1219,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3927:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3927:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3912:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1230,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "3972:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1223,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1005,
                              "src": "3941:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1225,
                            "indexExpression": {
                              "id": 1224,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1196,
                              "src": "3949:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3941:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1228,
                          "indexExpression": {
                            "expression": {
                              "id": 1226,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3956:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3956:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3941:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 925,
                        "src": "3941:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3941:38:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3912:67:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1233,
                  "nodeType": "ExpressionStatement",
                  "src": "3912:67:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1235,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1196,
                        "src": "3999:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1236,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1198,
                        "src": "4006:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1237,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "4011:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1234,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1173,
                      "src": "3989:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3989:29:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "3989:29:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4035:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1204,
                  "id": 1241,
                  "nodeType": "Return",
                  "src": "4028:11:16"
                }
              ]
            },
            "documentation": {
              "id": 1194,
              "nodeType": "StructuredDocumentation",
              "src": "3385:293:16",
              "text": "@notice Transfer tokens from one address to another\n@param _from The address which you want to send tokens from\n@param _to The address which you want to transfer to\n@param _value The amount of tokens to be transferred\n@return Success boolean"
            },
            "functionSelector": "23b872dd",
            "id": 1243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3692:12:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1196,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3722:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "3714:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3714:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1198,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3745:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "3737:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3737:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1200,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "3766:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "3758:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3758:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3704:74:16"
            },
            "returnParameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "3811:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3811:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3810:6:16"
            },
            "scope": 1244,
            "src": "3683:363:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1245,
        "src": "246:3803:16",
        "usedErrors": []
      }
    ],
    "src": "0:4050:16"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620009b0380380620009b0833981016040819052620000349162000225565b835162000049906001906020870190620000c8565b5082516200005f906000906020860190620000c8565b50600282905560038190553360008181526004602090815260408083208590558051928352908201929092529081018290527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060600160405180910390a150505050620002f2565b828054620000d6906200029f565b90600052602060002090601f016020900481019282620000fa576000855562000145565b82601f106200011557805160ff191683800117855562000145565b8280016001018555821562000145579182015b828111156200014557825182559160200191906001019062000128565b506200015392915062000157565b5090565b5b8082111562000153576000815560010162000158565b600082601f8301126200018057600080fd5b81516001600160401b03808211156200019d576200019d620002dc565b604051601f8301601f19908116603f01168101908282118183101715620001c857620001c8620002dc565b81604052838152602092508683858801011115620001e557600080fd5b600091505b83821015620002095785820183015181830184015290820190620001ea565b838211156200021b5760008385830101525b9695505050505050565b600080600080608085870312156200023c57600080fd5b84516001600160401b03808211156200025457600080fd5b62000262888389016200016e565b955060208701519150808211156200027957600080fd5b5062000288878288016200016e565b604087015160609097015195989097509350505050565b600181811c90821680620002b457607f821691505b60208210811415620002d657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6106ae80620003026000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461010357806370a082311461010c57806395d89b4114610135578063a9059cbb1461013d578063dd62ed3e1461015057600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100f0575b600080fd5b6100a0610189565b6040516100ad91906105a3565b60405180910390f35b6100c96100c4366004610579565b610217565b60405190151581526020016100ad565b6100e260035481565b6040519081526020016100ad565b6100c96100fe36600461053d565b610288565b6100e260025481565b6100e261011a3660046104ef565b6001600160a01b031660009081526004602052604090205490565b6100a0610360565b6100c961014b366004610579565b61036d565b6100e261015e36600461050a565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b6001805461019690610627565b80601f01602080910402602001604051908101604052809291908181526020018280546101c290610627565b801561020f5780601f106101e45761010080835404028352916020019161020f565b820191906000526020600020905b8154815290600101906020018083116101f257829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b0387168085529083528184208690558151948552918401919091528201839052907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259060600160405180910390a15060015b92915050565b6001600160a01b03831660009081526005602090815260408083203384529091528120548211156102f95760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064015b60405180910390fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020546103279083610383565b6001600160a01b03851660009081526005602090815260408083203384529091529020556103568484846103a3565b5060019392505050565b6000805461019690610627565b600061037a3384846103a3565b50600192915050565b60008282111561039257600080fd5b61039c8284610610565b9392505050565b6001600160a01b0383166000908152600460205260409020548111156104025760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016102f0565b6001600160a01b0383166000908152600460205260409020546104259082610383565b6001600160a01b03808516600090815260046020526040808220939093559084168152205461045490826104b8565b6001600160a01b038381166000818152600460209081526040918290209490945580519287168352928201529081018290527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060600160405180910390a1505050565b60006104c482846105f8565b90508281101561028257600080fd5b80356001600160a01b03811681146104ea57600080fd5b919050565b60006020828403121561050157600080fd5b61039c826104d3565b6000806040838503121561051d57600080fd5b610526836104d3565b9150610534602084016104d3565b90509250929050565b60008060006060848603121561055257600080fd5b61055b846104d3565b9250610569602085016104d3565b9150604084013590509250925092565b6000806040838503121561058c57600080fd5b610595836104d3565b946020939093013593505050565b600060208083528351808285015260005b818110156105d0578581018301518582016040015282016105b4565b818111156105e2576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561060b5761060b610662565b500190565b60008282101561062257610622610662565b500390565b600181811c9082168061063b57607f821691505b6020821081141561065c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e8b40d79522c2b83f93c44ab49f5d43472af7acfbbe4bf3e951d4174d946030964736f6c63430008050033",
  "bytecodeSha1": "fd6f945bfaf3fd54535ec49b38d79508ec53912b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.5+commit.a4f2e591"
  },
  "contractName": "Token",
  "coverageMap": {
    "branches": {
      "15": {
        "SafeMath.add": {
          "22": [
            146,
            152,
            true
          ]
        },
        "SafeMath.sub": {
          "21": [
            262,
            268,
            true
          ]
        }
      },
      "16": {
        "Token._transfer": {
          "20": [
            2826,
            2851,
            true
          ]
        },
        "Token.transferFrom": {
          "19": [
            3839,
            3875,
            true
          ]
        }
      }
    },
    "statements": {
      "15": {
        "SafeMath.add": {
          "17": [
            119,
            128
          ],
          "18": [
            138,
            153
          ]
        },
        "SafeMath.sub": {
          "11": [
            254,
            269
          ],
          "12": [
            279,
            288
          ]
        }
      },
      "16": {
        "Token._transfer": {
          "13": [
            2818,
            2876
          ],
          "14": [
            2886,
            2931
          ],
          "15": [
            2941,
            2982
          ],
          "16": [
            2992,
            3025
          ]
        },
        "Token.allowance": {
          "1": [
            1744,
            1776
          ]
        },
        "Token.approve": {
          "2": [
            2557,
            2595
          ],
          "3": [
            2605,
            2648
          ],
          "4": [
            2658,
            2669
          ]
        },
        "Token.balanceOf": {
          "0": [
            1274,
            1297
          ]
        },
        "Token.transfer": {
          "9": [
            3317,
            3351
          ],
          "10": [
            3361,
            3372
          ]
        },
        "Token.transferFrom": {
          "5": [
            3831,
            3902
          ],
          "6": [
            3912,
            3979
          ],
          "7": [
            3989,
            4018
          ],
          "8": [
            4028,
            4039
          ]
        }
      }
    }
  },
  "dependencies": [
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461010357806370a082311461010c57806395d89b4114610135578063a9059cbb1461013d578063dd62ed3e1461015057600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100f0575b600080fd5b6100a0610189565b6040516100ad91906105a3565b60405180910390f35b6100c96100c4366004610579565b610217565b60405190151581526020016100ad565b6100e260035481565b6040519081526020016100ad565b6100c96100fe36600461053d565b610288565b6100e260025481565b6100e261011a3660046104ef565b6001600160a01b031660009081526004602052604090205490565b6100a0610360565b6100c961014b366004610579565b61036d565b6100e261015e36600461050a565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b6001805461019690610627565b80601f01602080910402602001604051908101604052809291908181526020018280546101c290610627565b801561020f5780601f106101e45761010080835404028352916020019161020f565b820191906000526020600020905b8154815290600101906020018083116101f257829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b0387168085529083528184208690558151948552918401919091528201839052907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259060600160405180910390a15060015b92915050565b6001600160a01b03831660009081526005602090815260408083203384529091528120548211156102f95760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064015b60405180910390fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020546103279083610383565b6001600160a01b03851660009081526005602090815260408083203384529091529020556103568484846103a3565b5060019392505050565b6000805461019690610627565b600061037a3384846103a3565b50600192915050565b60008282111561039257600080fd5b61039c8284610610565b9392505050565b6001600160a01b0383166000908152600460205260409020548111156104025760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016102f0565b6001600160a01b0383166000908152600460205260409020546104259082610383565b6001600160a01b03808516600090815260046020526040808220939093559084168152205461045490826104b8565b6001600160a01b038381166000818152600460209081526040918290209490945580519287168352928201529081018290527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060600160405180910390a1505050565b60006104c482846105f8565b90508281101561028257600080fd5b80356001600160a01b03811681146104ea57600080fd5b919050565b60006020828403121561050157600080fd5b61039c826104d3565b6000806040838503121561051d57600080fd5b610526836104d3565b9150610534602084016104d3565b90509250929050565b60008060006060848603121561055257600080fd5b61055b846104d3565b9250610569602085016104d3565b9150604084013590509250925092565b6000806040838503121561058c57600080fd5b610595836104d3565b946020939093013593505050565b600060208083528351808285015260005b818110156105d0578581018301518582016040015282016105b4565b818111156105e2576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561060b5761060b610662565b500190565b60008282101561062257610622610662565b500390565b600181811c9082168061063b57607f821691505b6020821081141561065c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e8b40d79522c2b83f93c44ab49f5d43472af7acfbbe4bf3e951d4174d946030964736f6c63430008050033",
  "deployedSourceMap": "246:3803:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;327:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2474:202;;;;;;:::i;:::-;;:::i;:::-;;;1785:14:17;;1778:22;1760:41;;1748:2;1733:18;2474:202:16;1715:92:17;380:26:16;;;;;;;;;3260:25:17;;;3248:2;3233:18;380:26:16;3215:76:17;3683:363:16;;;;;;:::i;:::-;;:::i;351:23::-;;;;;;1199:105;;;;;;:::i;:::-;-1:-1:-1;;;;;1281:16:16;1255:7;1281:16;;;:8;:16;;;;;;;1199:105;301:20;;;:::i;3238:141::-;;;;;;:::i;:::-;;:::i;1601:182::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1751:15:16;;;1721:7;1751:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;1601:182;327:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2474:202::-;2565:10;2541:4;2557:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;2557:29:16;;;;;;;;;;;:38;;;2610;;1480:34:17;;;1530:18;;;1523:43;;;;1582:18;;1575:34;;;2541:4:16;2610:38;;1430:2:17;1415:18;2610:38:16;;;;;;;-1:-1:-1;2665:4:16;2474:202;;;;;:::o;3683:363::-;-1:-1:-1;;;;;3839:14:16;;3811:4;3839:14;;;:7;:14;;;;;;;;3854:10;3839:26;;;;;;;;:36;-1:-1:-1;3839:36:16;3831:71;;;;-1:-1:-1;;;3831:71:16;;2616:2:17;3831:71:16;;;2598:21:17;2655:2;2635:18;;;2628:30;-1:-1:-1;;;2674:18:17;;;2667:52;2736:18;;3831:71:16;;;;;;;;;-1:-1:-1;;;;;3941:14:16;;;;;;:7;:14;;;;;;;;3956:10;3941:26;;;;;;;;:38;;3972:6;3941:30;:38::i;:::-;-1:-1:-1;;;;;3912:14:16;;;;;;:7;:14;;;;;;;;3927:10;3912:26;;;;;;;:67;3989:29;3920:5;4006:3;4011:6;3989:9;:29::i;:::-;-1:-1:-1;4035:4:16;3683:363;;;;;:::o;301:20::-;;;;;;;:::i;3238:141::-;3301:4;3317:34;3327:10;3339:3;3344:6;3317:9;:34::i;:::-;-1:-1:-1;3368:4:16;3238:141;;;;:::o;184:129:15:-;236:6;267:1;262;:6;;254:15;;;;;;283:5;287:1;283;:5;:::i;:::-;279:9;184:129;-1:-1:-1;;;184:129:15:o;2736:296:16:-;-1:-1:-1;;;;;2826:15:16;;;;;;:8;:15;;;;;;:25;-1:-1:-1;2826:25:16;2818:58;;;;-1:-1:-1;;;2818:58:16;;2967:2:17;2818:58:16;;;2949:21:17;3006:2;2986:18;;;2979:30;-1:-1:-1;;;3025:18:17;;;3018:50;3085:18;;2818:58:16;2939:170:17;2818:58:16;-1:-1:-1;;;;;2904:15:16;;;;;;:8;:15;;;;;;:27;;2924:6;2904:19;:27::i;:::-;-1:-1:-1;;;;;2886:15:16;;;;;;;:8;:15;;;;;;:45;;;;2957:13;;;;;;;:25;;2975:6;2957:17;:25::i;:::-;-1:-1:-1;;;;;2941:13:16;;;;;;;:8;:13;;;;;;;;;:41;;;;2997:28;;1498:15:17;;;1480:34;;1530:18;;;1523:43;1582:18;;;1575:34;;;2997:28:16;;1430:2:17;1415:18;2997:28:16;;;;;;;2736:296;;;:::o;49:129:15:-;101:6;123:5;127:1;123;:5;:::i;:::-;119:9;;151:1;146;:6;;138:15;;;;;14:173:17;82:20;;-1:-1:-1;;;;;131:31:17;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:2;;;528:1;525;518:12;480:2;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;470:173;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:2;;;810:1;807;800:12;762:2;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;752:224;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:2;;;1126:1;1123;1116:12;1078:2;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;1068:167:17:o;1812:597::-;1924:4;1953:2;1982;1971:9;1964:21;2014:6;2008:13;2057:6;2052:2;2041:9;2037:18;2030:34;2082:1;2092:140;2106:6;2103:1;2100:13;2092:140;;;2201:14;;;2197:23;;2191:30;2167:17;;;2186:2;2163:26;2156:66;2121:10;;2092:140;;;2250:6;2247:1;2244:13;2241:2;;;2320:1;2315:2;2306:6;2295:9;2291:22;2287:31;2280:42;2241:2;-1:-1:-1;2393:2:17;2372:15;-1:-1:-1;;2368:29:17;2353:45;;;;2400:2;2349:54;;1933:476;-1:-1:-1;;;1933:476:17:o;3296:128::-;3336:3;3367:1;3363:6;3360:1;3357:13;3354:2;;;3373:18;;:::i;:::-;-1:-1:-1;3409:9:17;;3344:80::o;3429:125::-;3469:4;3497:1;3494;3491:8;3488:2;;;3502:18;;:::i;:::-;-1:-1:-1;3539:9:17;;3478:76::o;3559:380::-;3638:1;3634:12;;;;3681;;;3702:2;;3756:4;3748:6;3744:17;3734:27;;3702:2;3809;3801:6;3798:14;3778:18;3775:38;3772:2;;;3855:10;3850:3;3846:20;3843:1;3836:31;3890:4;3887:1;3880:15;3918:4;3915:1;3908:15;3772:2;;3614:325;;;:::o;3944:127::-;4005:10;4000:3;3996:20;3993:1;3986:31;4036:4;4033:1;4026:15;4060:4;4057:1;4050:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "notice": "Getter to check the amount of tokens that an owner allowed to a spender",
        "params": {
          "_owner": "The address which owns the funds",
          "_spender": "The address which will spend the funds"
        },
        "returns": {
          "_0": "The amount of tokens still available for the spender"
        }
      },
      "approve(address,uint256)": {
        "details": "Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "notice": "Approve an address to spend the specified amount of tokens on behalf of msg.sender",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        },
        "returns": {
          "_0": "Success boolean"
        }
      },
      "balanceOf(address)": {
        "notice": "Getter to check the current balance of an address",
        "params": {
          "_owner": "Address to query the balance of"
        },
        "returns": {
          "_0": "Token balance"
        }
      },
      "transfer(address,uint256)": {
        "notice": "Transfer tokens to a specified address",
        "params": {
          "_to": "The address to transfer to",
          "_value": "The amount to be transferred"
        },
        "returns": {
          "_0": "Success boolean"
        }
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer tokens from one address to another",
        "params": {
          "_from": "The address which you want to send tokens from",
          "_to": "The address which you want to transfer to",
          "_value": "The amount of tokens to be transferred"
        },
        "returns": {
          "_0": "Success boolean"
        }
      }
    },
    "notice": "Based on the ERC-20 token standard as defined at https://eips.ethereum.org/EIPS/eip-20",
    "title": "Bare-bones Token implementation",
    "version": 1
  },
  "offset": [
    246,
    4049
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x579 JUMP JUMPDEST PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xE2 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH2 0xE2 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x360 JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x579 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x50A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x196 SWAP1 PUSH2 0x627 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C2 SWAP1 PUSH2 0x627 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x327 SWAP1 DUP4 PUSH2 0x383 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0x356 DUP5 DUP5 DUP5 PUSH2 0x3A3 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x196 SWAP1 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A CALLER DUP5 DUP5 PUSH2 0x3A3 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39C DUP3 DUP5 PUSH2 0x610 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x425 SWAP1 DUP3 PUSH2 0x383 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x454 SWAP1 DUP3 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD SWAP3 DUP8 AND DUP4 MSTORE SWAP3 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4 DUP3 DUP5 PUSH2 0x5F8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39C DUP3 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x526 DUP4 PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x534 PUSH1 0x20 DUP5 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55B DUP5 PUSH2 0x4D3 JUMP JUMPDEST SWAP3 POP PUSH2 0x569 PUSH1 0x20 DUP6 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x595 DUP4 PUSH2 0x4D3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5D0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5B4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60B PUSH2 0x662 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x622 JUMPI PUSH2 0x622 PUSH2 0x662 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x63B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x65C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xB4 0xD PUSH26 0x522C2B83F93C44AB49F5D43472AF7ACFBBE4BF3E951D4174D946 SUB MULMOD PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        246,
        4049
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "6": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "12": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "DUP1",
      "path": "16"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "REVERT",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "17": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "POP",
      "path": "16"
    },
    "18": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "21": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "LT",
      "path": "16"
    },
    "22": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "29": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "SHR",
      "path": "16"
    },
    "32": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "DUP1",
      "path": "16"
    },
    "33": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x313CE567"
    },
    "38": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "GT",
      "path": "16"
    },
    "39": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "43": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "DUP1",
      "path": "16"
    },
    "44": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x313CE567"
    },
    "49": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "EQ",
      "path": "16"
    },
    "50": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x103"
    },
    "53": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "54": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "DUP1",
      "path": "16"
    },
    "55": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "EQ",
      "path": "16"
    },
    "61": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10C"
    },
    "64": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "65": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "DUP1",
      "path": "16"
    },
    "66": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "EQ",
      "path": "16"
    },
    "72": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x135"
    },
    "75": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "76": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "DUP1",
      "path": "16"
    },
    "77": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "EQ",
      "path": "16"
    },
    "83": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13D"
    },
    "86": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "87": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "DUP1",
      "path": "16"
    },
    "88": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "EQ",
      "path": "16"
    },
    "94": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x150"
    },
    "97": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "98": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "DUP1",
      "path": "16"
    },
    "101": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "REVERT",
      "path": "16"
    },
    "102": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "103": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "DUP1",
      "path": "16"
    },
    "104": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6FDDE03"
    },
    "109": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "EQ",
      "path": "16"
    },
    "110": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "114": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "DUP1",
      "path": "16"
    },
    "115": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95EA7B3"
    },
    "120": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "EQ",
      "path": "16"
    },
    "121": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB6"
    },
    "124": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "125": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "DUP1",
      "path": "16"
    },
    "126": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x18160DDD"
    },
    "131": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "EQ",
      "path": "16"
    },
    "132": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD9"
    },
    "135": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "136": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "DUP1",
      "path": "16"
    },
    "137": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "142": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "EQ",
      "path": "16"
    },
    "143": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF0"
    },
    "146": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "147": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "148": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "DUP1",
      "path": "16"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        246,
        4049
      ],
      "op": "REVERT",
      "path": "16"
    },
    "152": {
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "153": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA0"
    },
    "156": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x189"
    },
    "159": {
      "fn": null,
      "jump": "i",
      "offset": [
        327,
        345
      ],
      "op": "JUMP",
      "path": "16"
    },
    "160": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "161": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "163": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "164": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAD"
    },
    "167": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "168": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "169": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5A3"
    },
    "172": {
      "fn": null,
      "jump": "i",
      "offset": [
        327,
        345
      ],
      "op": "JUMP",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "174": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "176": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "177": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "16"
    },
    "178": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "179": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "SUB",
      "path": "16"
    },
    "180": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "181": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "RETURN",
      "path": "16"
    },
    "182": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "183": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC9"
    },
    "186": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC4"
    },
    "189": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "190": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "192": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x579"
    },
    "195": {
      "fn": "Token.approve",
      "jump": "i",
      "offset": [
        2474,
        2676
      ],
      "op": "JUMP",
      "path": "16"
    },
    "196": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "197": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x217"
    },
    "200": {
      "fn": "Token.approve",
      "jump": "i",
      "offset": [
        2474,
        2676
      ],
      "op": "JUMP",
      "path": "16"
    },
    "201": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "202": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "204": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "205": {
      "op": "SWAP1"
    },
    "206": {
      "op": "ISZERO"
    },
    "207": {
      "op": "ISZERO"
    },
    "208": {
      "op": "DUP2"
    },
    "209": {
      "op": "MSTORE"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "212": {
      "op": "ADD"
    },
    "213": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAD"
    },
    "216": {
      "op": "JUMP"
    },
    "217": {
      "offset": [
        380,
        406
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "218": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2"
    },
    "221": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "223": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "224": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "DUP2",
      "path": "16"
    },
    "225": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "JUMP",
      "path": "16"
    },
    "226": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "227": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "229": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "230": {
      "op": "SWAP1"
    },
    "231": {
      "op": "DUP2"
    },
    "232": {
      "op": "MSTORE"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "235": {
      "op": "ADD"
    },
    "236": {
      "offset": [
        380,
        406
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAD"
    },
    "239": {
      "op": "JUMP"
    },
    "240": {
      "fn": "Token.transferFrom",
      "offset": [
        3683,
        4046
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "241": {
      "fn": "Token.transferFrom",
      "offset": [
        3683,
        4046
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC9"
    },
    "244": {
      "fn": "Token.transferFrom",
      "offset": [
        3683,
        4046
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFE"
    },
    "247": {
      "fn": "Token.transferFrom",
      "offset": [
        3683,
        4046
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "248": {
      "fn": "Token.transferFrom",
      "offset": [
        3683,
        4046
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "250": {
      "fn": "Token.transferFrom",
      "offset": [
        3683,
        4046
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x53D"
    },
    "253": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        3683,
        4046
      ],
      "op": "JUMP",
      "path": "16"
    },
    "254": {
      "fn": "Token.transferFrom",
      "offset": [
        3683,
        4046
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "255": {
      "fn": "Token.transferFrom",
      "offset": [
        3683,
        4046
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x288"
    },
    "258": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        3683,
        4046
      ],
      "op": "JUMP",
      "path": "16"
    },
    "259": {
      "offset": [
        351,
        374
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "260": {
      "fn": "Token.transferFrom",
      "offset": [
        351,
        374
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2"
    },
    "263": {
      "fn": "Token.transferFrom",
      "offset": [
        351,
        374
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "265": {
      "fn": "Token.transferFrom",
      "offset": [
        351,
        374
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "266": {
      "fn": "Token.transferFrom",
      "offset": [
        351,
        374
      ],
      "op": "DUP2",
      "path": "16"
    },
    "267": {
      "fn": "Token.transferFrom",
      "offset": [
        351,
        374
      ],
      "op": "JUMP",
      "path": "16"
    },
    "268": {
      "fn": "Token.balanceOf",
      "offset": [
        1199,
        1304
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "269": {
      "fn": "Token.balanceOf",
      "offset": [
        1199,
        1304
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2"
    },
    "272": {
      "fn": "Token.balanceOf",
      "offset": [
        1199,
        1304
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11A"
    },
    "275": {
      "fn": "Token.balanceOf",
      "offset": [
        1199,
        1304
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "276": {
      "fn": "Token.balanceOf",
      "offset": [
        1199,
        1304
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "278": {
      "fn": "Token.balanceOf",
      "offset": [
        1199,
        1304
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4EF"
    },
    "281": {
      "fn": "Token.balanceOf",
      "jump": "i",
      "offset": [
        1199,
        1304
      ],
      "op": "JUMP",
      "path": "16"
    },
    "282": {
      "fn": "Token.balanceOf",
      "offset": [
        1199,
        1304
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "289": {
      "op": "SHL"
    },
    "290": {
      "op": "SUB"
    },
    "291": {
      "fn": "Token.balanceOf",
      "offset": [
        1281,
        1297
      ],
      "op": "AND",
      "path": "16",
      "statement": 0
    },
    "292": {
      "fn": "Token.balanceOf",
      "offset": [
        1255,
        1262
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "294": {
      "fn": "Token.balanceOf",
      "offset": [
        1281,
        1297
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "295": {
      "fn": "Token.balanceOf",
      "offset": [
        1281,
        1297
      ],
      "op": "DUP2",
      "path": "16"
    },
    "296": {
      "fn": "Token.balanceOf",
      "offset": [
        1281,
        1297
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "297": {
      "fn": "Token.balanceOf",
      "offset": [
        1281,
        1289
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "299": {
      "fn": "Token.balanceOf",
      "offset": [
        1281,
        1297
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "301": {
      "fn": "Token.balanceOf",
      "offset": [
        1281,
        1297
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "302": {
      "fn": "Token.balanceOf",
      "offset": [
        1281,
        1297
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "304": {
      "fn": "Token.balanceOf",
      "offset": [
        1281,
        1297
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "305": {
      "fn": "Token.balanceOf",
      "offset": [
        1281,
        1297
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "306": {
      "fn": "Token.balanceOf",
      "offset": [
        1281,
        1297
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "307": {
      "fn": "Token.balanceOf",
      "offset": [
        1281,
        1297
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "308": {
      "fn": "Token.balanceOf",
      "offset": [
        1199,
        1304
      ],
      "op": "JUMP",
      "path": "16"
    },
    "309": {
      "offset": [
        301,
        321
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "310": {
      "fn": "Token.balanceOf",
      "offset": [
        301,
        321
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA0"
    },
    "313": {
      "fn": "Token.balanceOf",
      "offset": [
        301,
        321
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x360"
    },
    "316": {
      "fn": "Token.balanceOf",
      "jump": "i",
      "offset": [
        301,
        321
      ],
      "op": "JUMP",
      "path": "16"
    },
    "317": {
      "fn": "Token.transfer",
      "offset": [
        3238,
        3379
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "318": {
      "fn": "Token.transfer",
      "offset": [
        3238,
        3379
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC9"
    },
    "321": {
      "fn": "Token.transfer",
      "offset": [
        3238,
        3379
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14B"
    },
    "324": {
      "fn": "Token.transfer",
      "offset": [
        3238,
        3379
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "325": {
      "fn": "Token.transfer",
      "offset": [
        3238,
        3379
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "327": {
      "fn": "Token.transfer",
      "offset": [
        3238,
        3379
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x579"
    },
    "330": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        3238,
        3379
      ],
      "op": "JUMP",
      "path": "16"
    },
    "331": {
      "fn": "Token.transfer",
      "offset": [
        3238,
        3379
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "332": {
      "fn": "Token.transfer",
      "offset": [
        3238,
        3379
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36D"
    },
    "335": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        3238,
        3379
      ],
      "op": "JUMP",
      "path": "16"
    },
    "336": {
      "fn": "Token.allowance",
      "offset": [
        1601,
        1783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "337": {
      "fn": "Token.allowance",
      "offset": [
        1601,
        1783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2"
    },
    "340": {
      "fn": "Token.allowance",
      "offset": [
        1601,
        1783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15E"
    },
    "343": {
      "fn": "Token.allowance",
      "offset": [
        1601,
        1783
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "344": {
      "fn": "Token.allowance",
      "offset": [
        1601,
        1783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "346": {
      "fn": "Token.allowance",
      "offset": [
        1601,
        1783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x50A"
    },
    "349": {
      "fn": "Token.allowance",
      "jump": "i",
      "offset": [
        1601,
        1783
      ],
      "op": "JUMP",
      "path": "16"
    },
    "350": {
      "fn": "Token.allowance",
      "offset": [
        1601,
        1783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "357": {
      "op": "SHL"
    },
    "358": {
      "op": "SUB"
    },
    "359": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1766
      ],
      "op": "SWAP2",
      "path": "16",
      "statement": 1
    },
    "360": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1766
      ],
      "op": "DUP3",
      "path": "16"
    },
    "361": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1766
      ],
      "op": "AND",
      "path": "16"
    },
    "362": {
      "fn": "Token.allowance",
      "offset": [
        1721,
        1728
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "364": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1766
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "365": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1766
      ],
      "op": "DUP2",
      "path": "16"
    },
    "366": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1766
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "367": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1758
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "369": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1766
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "371": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1766
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "372": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1766
      ],
      "op": "DUP2",
      "path": "16"
    },
    "373": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1766
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "374": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1766
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "376": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1766
      ],
      "op": "DUP1",
      "path": "16"
    },
    "377": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1766
      ],
      "op": "DUP4",
      "path": "16"
    },
    "378": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1766
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "379": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1776
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "380": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1776
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "381": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1776
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "382": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1776
      ],
      "op": "AND",
      "path": "16"
    },
    "383": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1776
      ],
      "op": "DUP3",
      "path": "16"
    },
    "384": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1776
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "385": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1776
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "386": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1776
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "387": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1776
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "388": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1776
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "389": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1776
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "390": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1776
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "391": {
      "fn": "Token.allowance",
      "offset": [
        1751,
        1776
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "392": {
      "fn": "Token.allowance",
      "offset": [
        1601,
        1783
      ],
      "op": "JUMP",
      "path": "16"
    },
    "393": {
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "394": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "396": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "16"
    },
    "397": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "398": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x196"
    },
    "401": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "402": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x627"
    },
    "405": {
      "fn": "Token.allowance",
      "jump": "i",
      "offset": [
        327,
        345
      ],
      "op": "JUMP",
      "path": "16"
    },
    "406": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "407": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "16"
    },
    "408": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "410": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "16"
    },
    "411": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "413": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "16"
    },
    "414": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "415": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DIV",
      "path": "16"
    },
    "416": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MUL",
      "path": "16"
    },
    "417": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "419": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "16"
    },
    "420": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "422": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "423": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "424": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP2",
      "path": "16"
    },
    "425": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "16"
    },
    "426": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "428": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "429": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "16"
    },
    "430": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "431": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "432": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "433": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP2",
      "path": "16"
    },
    "434": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP2",
      "path": "16"
    },
    "435": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "436": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "438": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "16"
    },
    "439": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP3",
      "path": "16"
    },
    "440": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "16"
    },
    "441": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "442": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C2"
    },
    "445": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "446": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x627"
    },
    "449": {
      "fn": "Token.allowance",
      "jump": "i",
      "offset": [
        327,
        345
      ],
      "op": "JUMP",
      "path": "16"
    },
    "450": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "451": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "16"
    },
    "452": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "453": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20F"
    },
    "456": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "457": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "16"
    },
    "458": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "460": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "LT",
      "path": "16"
    },
    "461": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E4"
    },
    "464": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "465": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "468": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "16"
    },
    "469": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP4",
      "path": "16"
    },
    "470": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "471": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DIV",
      "path": "16"
    },
    "472": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MUL",
      "path": "16"
    },
    "473": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP4",
      "path": "16"
    },
    "474": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "475": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "476": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "478": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "16"
    },
    "479": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "480": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20F"
    },
    "483": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMP",
      "path": "16"
    },
    "484": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "485": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP3",
      "path": "16"
    },
    "486": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "16"
    },
    "487": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "488": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "489": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "491": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "492": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "494": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "496": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "497": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "498": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "499": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP2",
      "path": "16"
    },
    "500": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "501": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP2",
      "path": "16"
    },
    "502": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "503": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "504": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "506": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "16"
    },
    "507": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "508": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "510": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "16"
    },
    "511": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "16"
    },
    "512": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP4",
      "path": "16"
    },
    "513": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "GT",
      "path": "16"
    },
    "514": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F2"
    },
    "517": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "518": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP3",
      "path": "16"
    },
    "519": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "520": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SUB",
      "path": "16"
    },
    "521": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "523": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "AND",
      "path": "16"
    },
    "524": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP3",
      "path": "16"
    },
    "525": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "16"
    },
    "526": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "527": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "528": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "POP",
      "path": "16"
    },
    "529": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "POP",
      "path": "16"
    },
    "530": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "POP",
      "path": "16"
    },
    "531": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "POP",
      "path": "16"
    },
    "532": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "POP",
      "path": "16"
    },
    "533": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP2",
      "path": "16"
    },
    "534": {
      "fn": "Token.allowance",
      "jump": "o",
      "offset": [
        327,
        345
      ],
      "op": "JUMP",
      "path": "16"
    },
    "535": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "536": {
      "fn": "Token.approve",
      "offset": [
        2565,
        2575
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 2
    },
    "537": {
      "fn": "Token.approve",
      "offset": [
        2541,
        2545
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "539": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2576
      ],
      "op": "DUP2",
      "path": "16"
    },
    "540": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2576
      ],
      "op": "DUP2",
      "path": "16"
    },
    "541": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2576
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "542": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2564
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "544": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2576
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "546": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2576
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "547": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2576
      ],
      "op": "DUP2",
      "path": "16"
    },
    "548": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2576
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "549": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2576
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "551": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2576
      ],
      "op": "DUP1",
      "path": "16"
    },
    "552": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2576
      ],
      "op": "DUP4",
      "path": "16"
    },
    "553": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2576
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "560": {
      "op": "SHL"
    },
    "561": {
      "op": "SUB"
    },
    "562": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP8",
      "path": "16"
    },
    "563": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2586
      ],
      "op": "AND",
      "path": "16"
    },
    "564": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP1",
      "path": "16"
    },
    "565": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP6",
      "path": "16"
    },
    "566": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2586
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "567": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2586
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "568": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP4",
      "path": "16"
    },
    "569": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2586
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "570": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP2",
      "path": "16"
    },
    "571": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP5",
      "path": "16"
    },
    "572": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2586
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "573": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2595
      ],
      "op": "DUP7",
      "path": "16"
    },
    "574": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2595
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "575": {
      "fn": "Token.approve",
      "offset": [
        2557,
        2595
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "576": {
      "fn": "Token.approve",
      "offset": [
        2610,
        2648
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 3
    },
    "577": {
      "fn": "Token.approve",
      "offset": [
        2610,
        2648
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "578": {
      "op": "SWAP5"
    },
    "579": {
      "op": "DUP6"
    },
    "580": {
      "op": "MSTORE"
    },
    "581": {
      "op": "SWAP2"
    },
    "582": {
      "op": "DUP5"
    },
    "583": {
      "op": "ADD"
    },
    "584": {
      "op": "SWAP2"
    },
    "585": {
      "op": "SWAP1"
    },
    "586": {
      "op": "SWAP2"
    },
    "587": {
      "op": "MSTORE"
    },
    "588": {
      "op": "DUP3"
    },
    "589": {
      "op": "ADD"
    },
    "590": {
      "op": "DUP4"
    },
    "591": {
      "op": "SWAP1"
    },
    "592": {
      "op": "MSTORE"
    },
    "593": {
      "fn": "Token.approve",
      "offset": [
        2541,
        2545
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "594": {
      "fn": "Token.approve",
      "offset": [
        2610,
        2648
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "627": {
      "fn": "Token.approve",
      "offset": [
        2610,
        2648
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "630": {
      "op": "ADD"
    },
    "631": {
      "fn": "Token.approve",
      "offset": [
        2610,
        2648
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "633": {
      "fn": "Token.approve",
      "offset": [
        2610,
        2648
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "634": {
      "fn": "Token.approve",
      "offset": [
        2610,
        2648
      ],
      "op": "DUP1",
      "path": "16"
    },
    "635": {
      "fn": "Token.approve",
      "offset": [
        2610,
        2648
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "636": {
      "fn": "Token.approve",
      "offset": [
        2610,
        2648
      ],
      "op": "SUB",
      "path": "16"
    },
    "637": {
      "fn": "Token.approve",
      "offset": [
        2610,
        2648
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "638": {
      "fn": "Token.approve",
      "offset": [
        2610,
        2648
      ],
      "op": "LOG1",
      "path": "16"
    },
    "639": {
      "op": "POP"
    },
    "640": {
      "fn": "Token.approve",
      "offset": [
        2665,
        2669
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 4,
      "value": "0x1"
    },
    "642": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "643": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "644": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "645": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "POP",
      "path": "16"
    },
    "646": {
      "fn": "Token.approve",
      "offset": [
        2474,
        2676
      ],
      "op": "POP",
      "path": "16"
    },
    "647": {
      "fn": "Token.approve",
      "jump": "o",
      "offset": [
        2474,
        2676
      ],
      "op": "JUMP",
      "path": "16"
    },
    "648": {
      "fn": "Token.transferFrom",
      "offset": [
        3683,
        4046
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "655": {
      "op": "SHL"
    },
    "656": {
      "op": "SUB"
    },
    "657": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3853
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 5
    },
    "658": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3853
      ],
      "op": "AND",
      "path": "16"
    },
    "659": {
      "fn": "Token.transferFrom",
      "offset": [
        3811,
        3815
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "661": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3853
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "662": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3853
      ],
      "op": "DUP2",
      "path": "16"
    },
    "663": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3853
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "664": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3846
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "666": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3853
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "668": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3853
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "669": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3853
      ],
      "op": "DUP2",
      "path": "16"
    },
    "670": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3853
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "671": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3853
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "673": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3853
      ],
      "op": "DUP1",
      "path": "16"
    },
    "674": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3853
      ],
      "op": "DUP4",
      "path": "16"
    },
    "675": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3853
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "676": {
      "fn": "Token.transferFrom",
      "offset": [
        3854,
        3864
      ],
      "op": "CALLER",
      "path": "16"
    },
    "677": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3865
      ],
      "op": "DUP5",
      "path": "16"
    },
    "678": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3865
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "679": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3865
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "680": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3865
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "681": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3865
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "682": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3865
      ],
      "op": "DUP2",
      "path": "16"
    },
    "683": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3865
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "684": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3865
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "685": {
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3875
      ],
      "op": "DUP3",
      "path": "16"
    },
    "686": {
      "op": "GT"
    },
    "687": {
      "branch": 19,
      "fn": "Token.transferFrom",
      "offset": [
        3839,
        3875
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "688": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F9"
    },
    "691": {
      "branch": 19,
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "692": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "694": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "695": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "699": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "701": {
      "op": "SHL"
    },
    "702": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "DUP2",
      "path": "16"
    },
    "703": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "706": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "708": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "DUP3",
      "path": "16"
    },
    "709": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "ADD",
      "path": "16"
    },
    "710": {
      "op": "MSTORE"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "715": {
      "op": "DUP3"
    },
    "716": {
      "op": "ADD"
    },
    "717": {
      "op": "MSTORE"
    },
    "718": {
      "op": "PUSH22",
      "value": "0x496E73756666696369656E7420616C6C6F77616E6365"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "743": {
      "op": "SHL"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "746": {
      "op": "DUP3"
    },
    "747": {
      "op": "ADD"
    },
    "748": {
      "op": "MSTORE"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "751": {
      "op": "ADD"
    },
    "752": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "753": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "755": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "756": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "DUP1",
      "path": "16"
    },
    "757": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "758": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "SUB",
      "path": "16"
    },
    "759": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "760": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "16"
    },
    "761": {
      "fn": "Token.transferFrom",
      "offset": [
        3831,
        3902
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "op": "SUB"
    },
    "770": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3955
      ],
      "op": "DUP5",
      "path": "16",
      "statement": 6
    },
    "771": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3955
      ],
      "op": "AND",
      "path": "16"
    },
    "772": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3955
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "774": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3955
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "775": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3955
      ],
      "op": "DUP2",
      "path": "16"
    },
    "776": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3955
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "777": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3948
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "779": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3955
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "781": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3955
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "782": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3955
      ],
      "op": "DUP2",
      "path": "16"
    },
    "783": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3955
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "784": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3955
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "786": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3955
      ],
      "op": "DUP1",
      "path": "16"
    },
    "787": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3955
      ],
      "op": "DUP4",
      "path": "16"
    },
    "788": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3955
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "789": {
      "fn": "Token.transferFrom",
      "offset": [
        3956,
        3966
      ],
      "op": "CALLER",
      "path": "16"
    },
    "790": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3967
      ],
      "op": "DUP5",
      "path": "16"
    },
    "791": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3967
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "792": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3967
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "793": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3967
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "794": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3967
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "795": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3967
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "796": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3967
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "797": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3967
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "798": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3979
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x327"
    },
    "801": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3979
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "802": {
      "fn": "Token.transferFrom",
      "offset": [
        3972,
        3978
      ],
      "op": "DUP4",
      "path": "16"
    },
    "803": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3971
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x383"
    },
    "806": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        3941,
        3979
      ],
      "op": "JUMP",
      "path": "16"
    },
    "807": {
      "fn": "Token.transferFrom",
      "offset": [
        3941,
        3979
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "814": {
      "op": "SHL"
    },
    "815": {
      "op": "SUB"
    },
    "816": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3926
      ],
      "op": "DUP6",
      "path": "16"
    },
    "817": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3926
      ],
      "op": "AND",
      "path": "16"
    },
    "818": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3926
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "820": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3926
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "821": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3926
      ],
      "op": "DUP2",
      "path": "16"
    },
    "822": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3926
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "823": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3919
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "825": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3926
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "827": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3926
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "828": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3926
      ],
      "op": "DUP2",
      "path": "16"
    },
    "829": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3926
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "830": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3926
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "832": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3926
      ],
      "op": "DUP1",
      "path": "16"
    },
    "833": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3926
      ],
      "op": "DUP4",
      "path": "16"
    },
    "834": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3926
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "835": {
      "fn": "Token.transferFrom",
      "offset": [
        3927,
        3937
      ],
      "op": "CALLER",
      "path": "16"
    },
    "836": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3938
      ],
      "op": "DUP5",
      "path": "16"
    },
    "837": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3938
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "838": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3938
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "839": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3938
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "840": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3938
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "841": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3938
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "842": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3938
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "843": {
      "fn": "Token.transferFrom",
      "offset": [
        3912,
        3979
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "844": {
      "fn": "Token.transferFrom",
      "offset": [
        3989,
        4018
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 7,
      "value": "0x356"
    },
    "847": {
      "fn": "Token.transferFrom",
      "offset": [
        3920,
        3925
      ],
      "op": "DUP5",
      "path": "16"
    },
    "848": {
      "fn": "Token.transferFrom",
      "offset": [
        4006,
        4009
      ],
      "op": "DUP5",
      "path": "16"
    },
    "849": {
      "fn": "Token.transferFrom",
      "offset": [
        4011,
        4017
      ],
      "op": "DUP5",
      "path": "16"
    },
    "850": {
      "fn": "Token.transferFrom",
      "offset": [
        3989,
        3998
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A3"
    },
    "853": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        3989,
        4018
      ],
      "op": "JUMP",
      "path": "16"
    },
    "854": {
      "fn": "Token.transferFrom",
      "offset": [
        3989,
        4018
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "855": {
      "op": "POP"
    },
    "856": {
      "fn": "Token.transferFrom",
      "offset": [
        4035,
        4039
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 8,
      "value": "0x1"
    },
    "858": {
      "fn": "Token.transferFrom",
      "offset": [
        3683,
        4046
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "859": {
      "fn": "Token.transferFrom",
      "offset": [
        3683,
        4046
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "860": {
      "fn": "Token.transferFrom",
      "offset": [
        3683,
        4046
      ],
      "op": "POP",
      "path": "16"
    },
    "861": {
      "fn": "Token.transferFrom",
      "offset": [
        3683,
        4046
      ],
      "op": "POP",
      "path": "16"
    },
    "862": {
      "fn": "Token.transferFrom",
      "offset": [
        3683,
        4046
      ],
      "op": "POP",
      "path": "16"
    },
    "863": {
      "fn": "Token.transferFrom",
      "jump": "o",
      "offset": [
        3683,
        4046
      ],
      "op": "JUMP",
      "path": "16"
    },
    "864": {
      "offset": [
        301,
        321
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "865": {
      "fn": "Token.transferFrom",
      "offset": [
        301,
        321
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "867": {
      "fn": "Token.transferFrom",
      "offset": [
        301,
        321
      ],
      "op": "DUP1",
      "path": "16"
    },
    "868": {
      "fn": "Token.transferFrom",
      "offset": [
        301,
        321
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "869": {
      "fn": "Token.transferFrom",
      "offset": [
        301,
        321
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x196"
    },
    "872": {
      "fn": "Token.transferFrom",
      "offset": [
        301,
        321
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "873": {
      "fn": "Token.transferFrom",
      "offset": [
        301,
        321
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x627"
    },
    "876": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        301,
        321
      ],
      "op": "JUMP",
      "path": "16"
    },
    "877": {
      "fn": "Token.transfer",
      "offset": [
        3238,
        3379
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "878": {
      "fn": "Token.transfer",
      "offset": [
        3301,
        3305
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "880": {
      "fn": "Token.transfer",
      "offset": [
        3317,
        3351
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 9,
      "value": "0x37A"
    },
    "883": {
      "fn": "Token.transfer",
      "offset": [
        3327,
        3337
      ],
      "op": "CALLER",
      "path": "16"
    },
    "884": {
      "fn": "Token.transfer",
      "offset": [
        3339,
        3342
      ],
      "op": "DUP5",
      "path": "16"
    },
    "885": {
      "fn": "Token.transfer",
      "offset": [
        3344,
        3350
      ],
      "op": "DUP5",
      "path": "16"
    },
    "886": {
      "fn": "Token.transfer",
      "offset": [
        3317,
        3326
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A3"
    },
    "889": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        3317,
        3351
      ],
      "op": "JUMP",
      "path": "16"
    },
    "890": {
      "fn": "Token.transfer",
      "offset": [
        3317,
        3351
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "891": {
      "op": "POP"
    },
    "892": {
      "fn": "Token.transfer",
      "offset": [
        3368,
        3372
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 10,
      "value": "0x1"
    },
    "894": {
      "fn": "Token.transfer",
      "offset": [
        3238,
        3379
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "895": {
      "fn": "Token.transfer",
      "offset": [
        3238,
        3379
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "896": {
      "fn": "Token.transfer",
      "offset": [
        3238,
        3379
      ],
      "op": "POP",
      "path": "16"
    },
    "897": {
      "fn": "Token.transfer",
      "offset": [
        3238,
        3379
      ],
      "op": "POP",
      "path": "16"
    },
    "898": {
      "fn": "Token.transfer",
      "jump": "o",
      "offset": [
        3238,
        3379
      ],
      "op": "JUMP",
      "path": "16"
    },
    "899": {
      "fn": "SafeMath.sub",
      "offset": [
        184,
        313
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "900": {
      "fn": "SafeMath.sub",
      "offset": [
        236,
        242
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "902": {
      "fn": "SafeMath.sub",
      "offset": [
        267,
        268
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 11
    },
    "903": {
      "fn": "SafeMath.sub",
      "offset": [
        262,
        263
      ],
      "op": "DUP3",
      "path": "15"
    },
    "904": {
      "fn": "SafeMath.sub",
      "offset": [
        262,
        268
      ],
      "op": "GT",
      "path": "15"
    },
    "905": {
      "branch": 21,
      "fn": "SafeMath.sub",
      "offset": [
        262,
        268
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "906": {
      "fn": "SafeMath.sub",
      "offset": [
        254,
        269
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x392"
    },
    "909": {
      "branch": 21,
      "fn": "SafeMath.sub",
      "offset": [
        254,
        269
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "910": {
      "fn": "SafeMath.sub",
      "offset": [
        254,
        269
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "912": {
      "fn": "SafeMath.sub",
      "offset": [
        254,
        269
      ],
      "op": "DUP1",
      "path": "15"
    },
    "913": {
      "fn": "SafeMath.sub",
      "offset": [
        254,
        269
      ],
      "op": "REVERT",
      "path": "15"
    },
    "914": {
      "fn": "SafeMath.sub",
      "offset": [
        254,
        269
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "915": {
      "fn": "SafeMath.sub",
      "offset": [
        283,
        288
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 12,
      "value": "0x39C"
    },
    "918": {
      "fn": "SafeMath.sub",
      "offset": [
        287,
        288
      ],
      "op": "DUP3",
      "path": "15"
    },
    "919": {
      "fn": "SafeMath.sub",
      "offset": [
        283,
        284
      ],
      "op": "DUP5",
      "path": "15"
    },
    "920": {
      "fn": "SafeMath.sub",
      "offset": [
        283,
        288
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x610"
    },
    "923": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        283,
        288
      ],
      "op": "JUMP",
      "path": "15"
    },
    "924": {
      "fn": "SafeMath.sub",
      "offset": [
        283,
        288
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "925": {
      "fn": "SafeMath.sub",
      "offset": [
        279,
        288
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "926": {
      "fn": "SafeMath.sub",
      "offset": [
        184,
        313
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "927": {
      "op": "POP"
    },
    "928": {
      "op": "POP"
    },
    "929": {
      "op": "POP"
    },
    "930": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        184,
        313
      ],
      "op": "JUMP",
      "path": "15"
    },
    "931": {
      "fn": "Token._transfer",
      "offset": [
        2736,
        3032
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "938": {
      "op": "SHL"
    },
    "939": {
      "op": "SUB"
    },
    "940": {
      "fn": "Token._transfer",
      "offset": [
        2826,
        2841
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 13
    },
    "941": {
      "fn": "Token._transfer",
      "offset": [
        2826,
        2841
      ],
      "op": "AND",
      "path": "16"
    },
    "942": {
      "fn": "Token._transfer",
      "offset": [
        2826,
        2841
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "944": {
      "fn": "Token._transfer",
      "offset": [
        2826,
        2841
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "945": {
      "fn": "Token._transfer",
      "offset": [
        2826,
        2841
      ],
      "op": "DUP2",
      "path": "16"
    },
    "946": {
      "fn": "Token._transfer",
      "offset": [
        2826,
        2841
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "947": {
      "fn": "Token._transfer",
      "offset": [
        2826,
        2834
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "949": {
      "fn": "Token._transfer",
      "offset": [
        2826,
        2841
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "951": {
      "fn": "Token._transfer",
      "offset": [
        2826,
        2841
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "952": {
      "fn": "Token._transfer",
      "offset": [
        2826,
        2841
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "954": {
      "fn": "Token._transfer",
      "offset": [
        2826,
        2841
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "955": {
      "fn": "Token._transfer",
      "offset": [
        2826,
        2841
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "956": {
      "fn": "Token._transfer",
      "offset": [
        2826,
        2841
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "957": {
      "fn": "Token._transfer",
      "offset": [
        2826,
        2851
      ],
      "op": "DUP2",
      "path": "16"
    },
    "958": {
      "op": "GT"
    },
    "959": {
      "branch": 20,
      "fn": "Token._transfer",
      "offset": [
        2826,
        2851
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "960": {
      "fn": "Token._transfer",
      "offset": [
        2818,
        2876
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x402"
    },
    "963": {
      "branch": 20,
      "fn": "Token._transfer",
      "offset": [
        2818,
        2876
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "964": {
      "fn": "Token._transfer",
      "offset": [
        2818,
        2876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "966": {
      "fn": "Token._transfer",
      "offset": [
        2818,
        2876
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "967": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "fn": "Token._transfer",
      "offset": [
        2818,
        2876
      ],
      "op": "DUP2",
      "path": "16"
    },
    "975": {
      "fn": "Token._transfer",
      "offset": [
        2818,
        2876
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "978": {
      "fn": "Token._transfer",
      "offset": [
        2818,
        2876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "980": {
      "fn": "Token._transfer",
      "offset": [
        2818,
        2876
      ],
      "op": "DUP3",
      "path": "16"
    },
    "981": {
      "fn": "Token._transfer",
      "offset": [
        2818,
        2876
      ],
      "op": "ADD",
      "path": "16"
    },
    "982": {
      "op": "MSTORE"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "987": {
      "op": "DUP3"
    },
    "988": {
      "op": "ADD"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH20",
      "value": "0x496E73756666696369656E742062616C616E6365"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1013": {
      "op": "SHL"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1016": {
      "op": "DUP3"
    },
    "1017": {
      "op": "ADD"
    },
    "1018": {
      "op": "MSTORE"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1021": {
      "op": "ADD"
    },
    "1022": {
      "fn": "Token._transfer",
      "offset": [
        2818,
        2876
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F0"
    },
    "1025": {
      "op": "JUMP"
    },
    "1026": {
      "fn": "Token._transfer",
      "offset": [
        2818,
        2876
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1033": {
      "op": "SHL"
    },
    "1034": {
      "op": "SUB"
    },
    "1035": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2919
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 14
    },
    "1036": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2919
      ],
      "op": "AND",
      "path": "16"
    },
    "1037": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2919
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1039": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2919
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1040": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2919
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1041": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2919
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1042": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2912
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1044": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2919
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1046": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2919
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1047": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2919
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1049": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2919
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1050": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2919
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1051": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2919
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1052": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2931
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x425"
    },
    "1055": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2931
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1056": {
      "fn": "Token._transfer",
      "offset": [
        2924,
        2930
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1057": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2923
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x383"
    },
    "1060": {
      "fn": "Token._transfer",
      "jump": "i",
      "offset": [
        2904,
        2931
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1061": {
      "fn": "Token._transfer",
      "offset": [
        2904,
        2931
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1068": {
      "op": "SHL"
    },
    "1069": {
      "op": "SUB"
    },
    "1070": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2901
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1071": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2901
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1072": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2901
      ],
      "op": "AND",
      "path": "16"
    },
    "1073": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1075": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2901
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1076": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2901
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1077": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2901
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1078": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2894
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1080": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1082": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2901
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1083": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2901
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1085": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2901
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1086": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2901
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1087": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2901
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1088": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2931
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1089": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2931
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1090": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2931
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1091": {
      "fn": "Token._transfer",
      "offset": [
        2886,
        2931
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1092": {
      "fn": "Token._transfer",
      "offset": [
        2957,
        2970
      ],
      "op": "SWAP1",
      "path": "16",
      "statement": 15
    },
    "1093": {
      "fn": "Token._transfer",
      "offset": [
        2957,
        2970
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1094": {
      "fn": "Token._transfer",
      "offset": [
        2957,
        2970
      ],
      "op": "AND",
      "path": "16"
    },
    "1095": {
      "fn": "Token._transfer",
      "offset": [
        2957,
        2970
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1096": {
      "fn": "Token._transfer",
      "offset": [
        2957,
        2970
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1097": {
      "fn": "Token._transfer",
      "offset": [
        2957,
        2970
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1098": {
      "fn": "Token._transfer",
      "offset": [
        2957,
        2970
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1099": {
      "fn": "Token._transfer",
      "offset": [
        2957,
        2982
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x454"
    },
    "1102": {
      "fn": "Token._transfer",
      "offset": [
        2957,
        2982
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1103": {
      "fn": "Token._transfer",
      "offset": [
        2975,
        2981
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1104": {
      "fn": "Token._transfer",
      "offset": [
        2957,
        2974
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4B8"
    },
    "1107": {
      "fn": "Token._transfer",
      "jump": "i",
      "offset": [
        2957,
        2982
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1108": {
      "fn": "Token._transfer",
      "offset": [
        2957,
        2982
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1115": {
      "op": "SHL"
    },
    "1116": {
      "op": "SUB"
    },
    "1117": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1118": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1119": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "AND",
      "path": "16"
    },
    "1120": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1122": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1123": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1124": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1125": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2949
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1127": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1129": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1130": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1131": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1132": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1134": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1135": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1136": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1137": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2954
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1138": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2982
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "1139": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2982
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1140": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2982
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "1141": {
      "fn": "Token._transfer",
      "offset": [
        2941,
        2982
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1142": {
      "fn": "Token._transfer",
      "offset": [
        2997,
        3025
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 16
    },
    "1143": {
      "fn": "Token._transfer",
      "offset": [
        2997,
        3025
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1144": {
      "op": "SWAP3"
    },
    "1145": {
      "op": "DUP8"
    },
    "1146": {
      "op": "AND"
    },
    "1147": {
      "op": "DUP4"
    },
    "1148": {
      "op": "MSTORE"
    },
    "1149": {
      "op": "SWAP3"
    },
    "1150": {
      "op": "DUP3"
    },
    "1151": {
      "op": "ADD"
    },
    "1152": {
      "op": "MSTORE"
    },
    "1153": {
      "op": "SWAP1"
    },
    "1154": {
      "op": "DUP2"
    },
    "1155": {
      "op": "ADD"
    },
    "1156": {
      "op": "DUP3"
    },
    "1157": {
      "op": "SWAP1"
    },
    "1158": {
      "op": "MSTORE"
    },
    "1159": {
      "fn": "Token._transfer",
      "offset": [
        2997,
        3025
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1192": {
      "fn": "Token._transfer",
      "offset": [
        2997,
        3025
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1195": {
      "op": "ADD"
    },
    "1196": {
      "fn": "Token._transfer",
      "offset": [
        2997,
        3025
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1198": {
      "fn": "Token._transfer",
      "offset": [
        2997,
        3025
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1199": {
      "fn": "Token._transfer",
      "offset": [
        2997,
        3025
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1200": {
      "fn": "Token._transfer",
      "offset": [
        2997,
        3025
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1201": {
      "fn": "Token._transfer",
      "offset": [
        2997,
        3025
      ],
      "op": "SUB",
      "path": "16"
    },
    "1202": {
      "fn": "Token._transfer",
      "offset": [
        2997,
        3025
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1203": {
      "fn": "Token._transfer",
      "offset": [
        2997,
        3025
      ],
      "op": "LOG1",
      "path": "16"
    },
    "1204": {
      "fn": "Token._transfer",
      "offset": [
        2736,
        3032
      ],
      "op": "POP",
      "path": "16"
    },
    "1205": {
      "fn": "Token._transfer",
      "offset": [
        2736,
        3032
      ],
      "op": "POP",
      "path": "16"
    },
    "1206": {
      "fn": "Token._transfer",
      "offset": [
        2736,
        3032
      ],
      "op": "POP",
      "path": "16"
    },
    "1207": {
      "fn": "Token._transfer",
      "jump": "o",
      "offset": [
        2736,
        3032
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1208": {
      "fn": "SafeMath.add",
      "offset": [
        49,
        178
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1209": {
      "fn": "SafeMath.add",
      "offset": [
        101,
        107
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1211": {
      "fn": "SafeMath.add",
      "offset": [
        123,
        128
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 17,
      "value": "0x4C4"
    },
    "1214": {
      "fn": "SafeMath.add",
      "offset": [
        127,
        128
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1215": {
      "fn": "SafeMath.add",
      "offset": [
        123,
        124
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1216": {
      "fn": "SafeMath.add",
      "offset": [
        123,
        128
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5F8"
    },
    "1219": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        123,
        128
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1220": {
      "fn": "SafeMath.add",
      "offset": [
        123,
        128
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1221": {
      "fn": "SafeMath.add",
      "offset": [
        119,
        128
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1222": {
      "fn": "SafeMath.add",
      "offset": [
        119,
        128
      ],
      "op": "POP",
      "path": "15"
    },
    "1223": {
      "fn": "SafeMath.add",
      "offset": [
        151,
        152
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 18
    },
    "1224": {
      "fn": "SafeMath.add",
      "offset": [
        146,
        147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1225": {
      "fn": "SafeMath.add",
      "offset": [
        146,
        152
      ],
      "op": "LT",
      "path": "15"
    },
    "1226": {
      "branch": 22,
      "fn": "SafeMath.add",
      "offset": [
        146,
        152
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1227": {
      "fn": "SafeMath.add",
      "offset": [
        138,
        153
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x282"
    },
    "1230": {
      "branch": 22,
      "fn": "SafeMath.add",
      "offset": [
        138,
        153
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1231": {
      "fn": "SafeMath.add",
      "offset": [
        138,
        153
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1233": {
      "fn": "SafeMath.add",
      "offset": [
        138,
        153
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1234": {
      "fn": "SafeMath.add",
      "offset": [
        138,
        153
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1235": {
      "op": "JUMPDEST"
    },
    "1236": {
      "op": "DUP1"
    },
    "1237": {
      "op": "CALLDATALOAD"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "op": "SUB"
    },
    "1246": {
      "op": "DUP2"
    },
    "1247": {
      "op": "AND"
    },
    "1248": {
      "op": "DUP2"
    },
    "1249": {
      "op": "EQ"
    },
    "1250": {
      "op": "PUSH2",
      "value": "0x4EA"
    },
    "1253": {
      "op": "JUMPI"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1256": {
      "op": "DUP1"
    },
    "1257": {
      "op": "REVERT"
    },
    "1258": {
      "op": "JUMPDEST"
    },
    "1259": {
      "op": "SWAP2"
    },
    "1260": {
      "op": "SWAP1"
    },
    "1261": {
      "op": "POP"
    },
    "1262": {
      "jump": "o",
      "op": "JUMP"
    },
    "1263": {
      "op": "JUMPDEST"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1268": {
      "op": "DUP3"
    },
    "1269": {
      "op": "DUP5"
    },
    "1270": {
      "op": "SUB"
    },
    "1271": {
      "op": "SLT"
    },
    "1272": {
      "op": "ISZERO"
    },
    "1273": {
      "op": "PUSH2",
      "value": "0x501"
    },
    "1276": {
      "op": "JUMPI"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1279": {
      "op": "DUP1"
    },
    "1280": {
      "op": "REVERT"
    },
    "1281": {
      "op": "JUMPDEST"
    },
    "1282": {
      "op": "PUSH2",
      "value": "0x39C"
    },
    "1285": {
      "op": "DUP3"
    },
    "1286": {
      "op": "PUSH2",
      "value": "0x4D3"
    },
    "1289": {
      "jump": "i",
      "op": "JUMP"
    },
    "1290": {
      "op": "JUMPDEST"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1293": {
      "op": "DUP1"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1296": {
      "op": "DUP4"
    },
    "1297": {
      "op": "DUP6"
    },
    "1298": {
      "op": "SUB"
    },
    "1299": {
      "op": "SLT"
    },
    "1300": {
      "op": "ISZERO"
    },
    "1301": {
      "op": "PUSH2",
      "value": "0x51D"
    },
    "1304": {
      "op": "JUMPI"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1307": {
      "op": "DUP1"
    },
    "1308": {
      "op": "REVERT"
    },
    "1309": {
      "op": "JUMPDEST"
    },
    "1310": {
      "op": "PUSH2",
      "value": "0x526"
    },
    "1313": {
      "op": "DUP4"
    },
    "1314": {
      "op": "PUSH2",
      "value": "0x4D3"
    },
    "1317": {
      "jump": "i",
      "op": "JUMP"
    },
    "1318": {
      "op": "JUMPDEST"
    },
    "1319": {
      "op": "SWAP2"
    },
    "1320": {
      "op": "POP"
    },
    "1321": {
      "op": "PUSH2",
      "value": "0x534"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1326": {
      "op": "DUP5"
    },
    "1327": {
      "op": "ADD"
    },
    "1328": {
      "op": "PUSH2",
      "value": "0x4D3"
    },
    "1331": {
      "jump": "i",
      "op": "JUMP"
    },
    "1332": {
      "op": "JUMPDEST"
    },
    "1333": {
      "op": "SWAP1"
    },
    "1334": {
      "op": "POP"
    },
    "1335": {
      "op": "SWAP3"
    },
    "1336": {
      "op": "POP"
    },
    "1337": {
      "op": "SWAP3"
    },
    "1338": {
      "op": "SWAP1"
    },
    "1339": {
      "op": "POP"
    },
    "1340": {
      "jump": "o",
      "op": "JUMP"
    },
    "1341": {
      "op": "JUMPDEST"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1344": {
      "op": "DUP1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1349": {
      "op": "DUP5"
    },
    "1350": {
      "op": "DUP7"
    },
    "1351": {
      "op": "SUB"
    },
    "1352": {
      "op": "SLT"
    },
    "1353": {
      "op": "ISZERO"
    },
    "1354": {
      "op": "PUSH2",
      "value": "0x552"
    },
    "1357": {
      "op": "JUMPI"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1360": {
      "op": "DUP1"
    },
    "1361": {
      "op": "REVERT"
    },
    "1362": {
      "op": "JUMPDEST"
    },
    "1363": {
      "op": "PUSH2",
      "value": "0x55B"
    },
    "1366": {
      "op": "DUP5"
    },
    "1367": {
      "op": "PUSH2",
      "value": "0x4D3"
    },
    "1370": {
      "jump": "i",
      "op": "JUMP"
    },
    "1371": {
      "op": "JUMPDEST"
    },
    "1372": {
      "op": "SWAP3"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "op": "PUSH2",
      "value": "0x569"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1379": {
      "op": "DUP6"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "op": "PUSH2",
      "value": "0x4D3"
    },
    "1384": {
      "jump": "i",
      "op": "JUMP"
    },
    "1385": {
      "op": "JUMPDEST"
    },
    "1386": {
      "op": "SWAP2"
    },
    "1387": {
      "op": "POP"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1390": {
      "op": "DUP5"
    },
    "1391": {
      "op": "ADD"
    },
    "1392": {
      "op": "CALLDATALOAD"
    },
    "1393": {
      "op": "SWAP1"
    },
    "1394": {
      "op": "POP"
    },
    "1395": {
      "op": "SWAP3"
    },
    "1396": {
      "op": "POP"
    },
    "1397": {
      "op": "SWAP3"
    },
    "1398": {
      "op": "POP"
    },
    "1399": {
      "op": "SWAP3"
    },
    "1400": {
      "jump": "o",
      "op": "JUMP"
    },
    "1401": {
      "op": "JUMPDEST"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1404": {
      "op": "DUP1"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1407": {
      "op": "DUP4"
    },
    "1408": {
      "op": "DUP6"
    },
    "1409": {
      "op": "SUB"
    },
    "1410": {
      "op": "SLT"
    },
    "1411": {
      "op": "ISZERO"
    },
    "1412": {
      "op": "PUSH2",
      "value": "0x58C"
    },
    "1415": {
      "op": "JUMPI"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1418": {
      "op": "DUP1"
    },
    "1419": {
      "op": "REVERT"
    },
    "1420": {
      "op": "JUMPDEST"
    },
    "1421": {
      "op": "PUSH2",
      "value": "0x595"
    },
    "1424": {
      "op": "DUP4"
    },
    "1425": {
      "op": "PUSH2",
      "value": "0x4D3"
    },
    "1428": {
      "jump": "i",
      "op": "JUMP"
    },
    "1429": {
      "op": "JUMPDEST"
    },
    "1430": {
      "op": "SWAP5"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1433": {
      "op": "SWAP4"
    },
    "1434": {
      "op": "SWAP1"
    },
    "1435": {
      "op": "SWAP4"
    },
    "1436": {
      "op": "ADD"
    },
    "1437": {
      "op": "CALLDATALOAD"
    },
    "1438": {
      "op": "SWAP4"
    },
    "1439": {
      "op": "POP"
    },
    "1440": {
      "op": "POP"
    },
    "1441": {
      "op": "POP"
    },
    "1442": {
      "jump": "o",
      "op": "JUMP"
    },
    "1443": {
      "op": "JUMPDEST"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1448": {
      "op": "DUP1"
    },
    "1449": {
      "op": "DUP4"
    },
    "1450": {
      "op": "MSTORE"
    },
    "1451": {
      "op": "DUP4"
    },
    "1452": {
      "op": "MLOAD"
    },
    "1453": {
      "op": "DUP1"
    },
    "1454": {
      "op": "DUP3"
    },
    "1455": {
      "op": "DUP6"
    },
    "1456": {
      "op": "ADD"
    },
    "1457": {
      "op": "MSTORE"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1460": {
      "op": "JUMPDEST"
    },
    "1461": {
      "op": "DUP2"
    },
    "1462": {
      "op": "DUP2"
    },
    "1463": {
      "op": "LT"
    },
    "1464": {
      "op": "ISZERO"
    },
    "1465": {
      "op": "PUSH2",
      "value": "0x5D0"
    },
    "1468": {
      "op": "JUMPI"
    },
    "1469": {
      "op": "DUP6"
    },
    "1470": {
      "op": "DUP2"
    },
    "1471": {
      "op": "ADD"
    },
    "1472": {
      "op": "DUP4"
    },
    "1473": {
      "op": "ADD"
    },
    "1474": {
      "op": "MLOAD"
    },
    "1475": {
      "op": "DUP6"
    },
    "1476": {
      "op": "DUP3"
    },
    "1477": {
      "op": "ADD"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1480": {
      "op": "ADD"
    },
    "1481": {
      "op": "MSTORE"
    },
    "1482": {
      "op": "DUP3"
    },
    "1483": {
      "op": "ADD"
    },
    "1484": {
      "op": "PUSH2",
      "value": "0x5B4"
    },
    "1487": {
      "op": "JUMP"
    },
    "1488": {
      "op": "JUMPDEST"
    },
    "1489": {
      "op": "DUP2"
    },
    "1490": {
      "op": "DUP2"
    },
    "1491": {
      "op": "GT"
    },
    "1492": {
      "op": "ISZERO"
    },
    "1493": {
      "op": "PUSH2",
      "value": "0x5E2"
    },
    "1496": {
      "op": "JUMPI"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1501": {
      "op": "DUP4"
    },
    "1502": {
      "op": "DUP8"
    },
    "1503": {
      "op": "ADD"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "MSTORE"
    },
    "1506": {
      "op": "JUMPDEST"
    },
    "1507": {
      "op": "POP"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1510": {
      "op": "ADD"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1513": {
      "op": "NOT"
    },
    "1514": {
      "op": "AND"
    },
    "1515": {
      "op": "SWAP3"
    },
    "1516": {
      "op": "SWAP1"
    },
    "1517": {
      "op": "SWAP3"
    },
    "1518": {
      "op": "ADD"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1521": {
      "op": "ADD"
    },
    "1522": {
      "op": "SWAP4"
    },
    "1523": {
      "op": "SWAP3"
    },
    "1524": {
      "op": "POP"
    },
    "1525": {
      "op": "POP"
    },
    "1526": {
      "op": "POP"
    },
    "1527": {
      "jump": "o",
      "op": "JUMP"
    },
    "1528": {
      "op": "JUMPDEST"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1531": {
      "op": "DUP3"
    },
    "1532": {
      "op": "NOT"
    },
    "1533": {
      "op": "DUP3"
    },
    "1534": {
      "op": "GT"
    },
    "1535": {
      "op": "ISZERO"
    },
    "1536": {
      "op": "PUSH2",
      "value": "0x60B"
    },
    "1539": {
      "op": "JUMPI"
    },
    "1540": {
      "op": "PUSH2",
      "value": "0x60B"
    },
    "1543": {
      "op": "PUSH2",
      "value": "0x662"
    },
    "1546": {
      "jump": "i",
      "op": "JUMP"
    },
    "1547": {
      "op": "JUMPDEST"
    },
    "1548": {
      "op": "POP"
    },
    "1549": {
      "op": "ADD"
    },
    "1550": {
      "op": "SWAP1"
    },
    "1551": {
      "jump": "o",
      "op": "JUMP"
    },
    "1552": {
      "op": "JUMPDEST"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1555": {
      "op": "DUP3"
    },
    "1556": {
      "op": "DUP3"
    },
    "1557": {
      "op": "LT"
    },
    "1558": {
      "op": "ISZERO"
    },
    "1559": {
      "op": "PUSH2",
      "value": "0x622"
    },
    "1562": {
      "op": "JUMPI"
    },
    "1563": {
      "op": "PUSH2",
      "value": "0x622"
    },
    "1566": {
      "op": "PUSH2",
      "value": "0x662"
    },
    "1569": {
      "jump": "i",
      "op": "JUMP"
    },
    "1570": {
      "op": "JUMPDEST"
    },
    "1571": {
      "op": "POP"
    },
    "1572": {
      "op": "SUB"
    },
    "1573": {
      "op": "SWAP1"
    },
    "1574": {
      "jump": "o",
      "op": "JUMP"
    },
    "1575": {
      "op": "JUMPDEST"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1578": {
      "op": "DUP2"
    },
    "1579": {
      "op": "DUP2"
    },
    "1580": {
      "op": "SHR"
    },
    "1581": {
      "op": "SWAP1"
    },
    "1582": {
      "op": "DUP3"
    },
    "1583": {
      "op": "AND"
    },
    "1584": {
      "op": "DUP1"
    },
    "1585": {
      "op": "PUSH2",
      "value": "0x63B"
    },
    "1588": {
      "op": "JUMPI"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1591": {
      "op": "DUP3"
    },
    "1592": {
      "op": "AND"
    },
    "1593": {
      "op": "SWAP2"
    },
    "1594": {
      "op": "POP"
    },
    "1595": {
      "op": "JUMPDEST"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1598": {
      "op": "DUP3"
    },
    "1599": {
      "op": "LT"
    },
    "1600": {
      "op": "DUP2"
    },
    "1601": {
      "op": "EQ"
    },
    "1602": {
      "op": "ISZERO"
    },
    "1603": {
      "op": "PUSH2",
      "value": "0x65C"
    },
    "1606": {
      "op": "JUMPI"
    },
    "1607": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1614": {
      "op": "SHL"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1617": {
      "op": "MSTORE"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1622": {
      "op": "MSTORE"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1627": {
      "op": "REVERT"
    },
    "1628": {
      "op": "JUMPDEST"
    },
    "1629": {
      "op": "POP"
    },
    "1630": {
      "op": "SWAP2"
    },
    "1631": {
      "op": "SWAP1"
    },
    "1632": {
      "op": "POP"
    },
    "1633": {
      "jump": "o",
      "op": "JUMP"
    },
    "1634": {
      "op": "JUMPDEST"
    },
    "1635": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1642": {
      "op": "SHL"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1645": {
      "op": "MSTORE"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1650": {
      "op": "MSTORE"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1655": {
      "op": "REVERT"
    }
  },
  "sha1": "45d006c7c05b6753c82537ca96f8dd539396ab98",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: MIT\n\nimport \"./SafeMath.sol\";\n\n/**\n    @title Bare-bones Token implementation\n    @notice Based on the ERC-20 token standard as defined at\n            https://eips.ethereum.org/EIPS/eip-20\n */\ncontract Token {\n\n    using SafeMath for uint256;\n\n    string public symbol;\n    string public name;\n    uint256 public decimals;\n    uint256 public totalSupply;\n\n    mapping(address => uint256) balances;\n    mapping(address => mapping(address => uint256)) allowed;\n\n    event Transfer(address from, address to, uint256 value);\n    event Approval(address owner, address spender, uint256 value);\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint256 _decimals,\n        uint256 _totalSupply\n    )\n        public\n    {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n        totalSupply = _totalSupply;\n        balances[msg.sender] = _totalSupply;\n        emit Transfer(address(0), msg.sender, _totalSupply);\n    }\n\n    /**\n        @notice Getter to check the current balance of an address\n        @param _owner Address to query the balance of\n        @return Token balance\n     */\n    function balanceOf(address _owner) public view returns (uint256) {\n        return balances[_owner];\n    }\n\n    /**\n        @notice Getter to check the amount of tokens that an owner allowed to a spender\n        @param _owner The address which owns the funds\n        @param _spender The address which will spend the funds\n        @return The amount of tokens still available for the spender\n     */\n    function allowance(\n        address _owner,\n        address _spender\n    )\n        public\n        view\n        returns (uint256)\n    {\n        return allowed[_owner][_spender];\n    }\n\n    /**\n        @notice Approve an address to spend the specified amount of tokens on behalf of msg.sender\n        @dev Beware that changing an allowance with this method brings the risk that someone may use both the old\n             and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n             race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n             https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        @param _spender The address which will spend the funds.\n        @param _value The amount of tokens to be spent.\n        @return Success boolean\n     */\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /** shared logic for transfer and transferFrom */\n    function _transfer(address _from, address _to, uint256 _value) internal {\n        require(balances[_from] >= _value, \"Insufficient balance\");\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n    }\n\n    /**\n        @notice Transfer tokens to a specified address\n        @param _to The address to transfer to\n        @param _value The amount to be transferred\n        @return Success boolean\n     */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n        @notice Transfer tokens from one address to another\n        @param _from The address which you want to send tokens from\n        @param _to The address which you want to transfer to\n        @param _value The amount of tokens to be transferred\n        @return Success boolean\n     */\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    )\n        public\n        returns (bool)\n    {\n        require(allowed[_from][msg.sender] >= _value, \"Insufficient allowance\");\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n}\n",
  "sourceMap": "246:3803:16:-:0;;;646:381;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;810:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;832:16:16;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;858:8:16;:20;;;888:11;:26;;;933:10;-1:-1:-1;924:20:16;;;:8;:20;;;;;;;;:35;;;974:46;;1834:34:17;;;1884:18;;;1877:43;;;;1936:18;;;1929:34;;;974:46:16;;1784:2:17;1769:18;974:46:16;;;;;;;646:381;;;;246:3803;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;246:3803:16;;;-1:-1:-1;246:3803:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:17;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;162:13;;-1:-1:-1;;;;;224:10:17;;;221:2;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:17;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:2;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:2;;;615:1;612;605:12;566:2;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:2;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:2;887:6;78:821;-1:-1:-1;;;;;;78:821:17:o;904:685::-;1021:6;1029;1037;1045;1098:3;1086:9;1077:7;1073:23;1069:33;1066:2;;;1115:1;1112;1105:12;1066:2;1142:16;;-1:-1:-1;;;;;1207:14:17;;;1204:2;;;1234:1;1231;1224:12;1204:2;1257:61;1310:7;1301:6;1290:9;1286:22;1257:61;:::i;:::-;1247:71;;1364:2;1353:9;1349:18;1343:25;1327:41;;1393:2;1383:8;1380:16;1377:2;;;1409:1;1406;1399:12;1377:2;;1432:63;1487:7;1476:8;1465:9;1461:24;1432:63;:::i;:::-;1535:2;1520:18;;1514:25;1579:2;1564:18;;;1558:25;1056:533;;1422:73;;-1:-1:-1;1056:533:17;-1:-1:-1;;;;1056:533:17:o;1974:380::-;2053:1;2049:12;;;;2096;;;2117:2;;2171:4;2163:6;2159:17;2149:27;;2117:2;2224;2216:6;2213:14;2193:18;2190:38;2187:2;;;2270:10;2265:3;2261:20;2258:1;2251:31;2305:4;2302:1;2295:15;2333:4;2330:1;2323:15;2187:2;;2029:325;;;:::o;2359:127::-;2420:10;2415:3;2411:20;2408:1;2401:31;2451:4;2448:1;2441:15;2475:4;2472:1;2465:15;2391:95;246:3803:16;;;;;;",
  "sourcePath": "contracts/mock/Token.sol",
  "type": "contract"
}